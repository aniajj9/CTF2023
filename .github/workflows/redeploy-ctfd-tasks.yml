name: Run CTFd Script

on:
  push:
    branches:
      - main

jobs:

  changed_files:
    runs-on: ubuntu-latest  # windows-latest || macos-latest
    name: Update CTFd
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39

      - name: List all changed files
        id: list-changed-files
        run: |
          changed_files_list=()
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            # Extract the first two levels of the directory structure
            truncated_path=$(echo "$file" | cut -d'/' -f-2)
            echo "$truncated_path was changed"
            changed_files_list+=("$truncated_path")
          done
          echo "::set-output name=changed_files::${changed_files_list[@]}"


      - name: Filter and format changed files
        id: filtered-files
        run: |
          # Initialize an empty array to store filtered entries
          filtered_files=()
      
          # Loop through each changed file
          for truncated_path in ${{ steps.list-changed-files.outputs.changed_files }}; do
            # Exclude entries with .github/workflows and depth-1 entries
            if [[ "$truncated_path" != ".github/workflows" && "$truncated_path" == */* ]]; then
              filtered_files+=("$truncated_path")
            fi
          done
      
          # Format the filtered entries as a comma-separated string
          formatted_list=$(IFS=,; echo "${filtered_files[*]}")
      
          echo "::set-output name=filtered_files::$formatted_list"
        shell: bash
      
      - name: Get formatted files
        run: echo ${{ steps.filtered-files.outputs.filtered_files }}


      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies (if needed)
        run: pip install -r requirements.txt

      - name: Run ctfd.py
        run: |
          filtered_files="${{ steps.filtered-files.outputs.filtered_files }}"
          if [ -z "$filtered_files" ]; then
            python ctfd.py "./" --token ${{ secrets.CTFD_TOKEN }} --url ${{ secrets.CTFD_URL }}
          else
            python ctfd.py "./" --directories-to-include "$filtered_files" --token ${{ secrets.CTFD_TOKEN }} --url ${{ secrets.CTFD_URL }}
          fi

